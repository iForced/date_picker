{"version":3,"sources":["DatePicker/DatePicker.module.css","state/dateReducer.ts","DatePicker/DatePicker.tsx","App.tsx","reportWebVitals.ts","index.tsx","App.module.css"],"names":["module","exports","Actions","now","Date","days","initialState","day","getDate","month","getMonth","year","getFullYear","name","getDay","dateReducer","state","action","type","SET_DAY","SET_MONTH","SET_YEAR","DatePicker","useReducer","date","dispatch","nameOfFirstDay","daysCount","i","push","onSetDay","e","newDay","currentTarget","innerText","className","s","picker","choose_year","onChange","newYear","value","min","max","choose_month","newMonth","choose_day","map","d","names","el","onClick","Math","random","App","app","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4ae9a17e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"picker\":\"DatePicker_picker__2yXor\",\"input\":\"DatePicker_input__26iPU\",\"choose_day\":\"DatePicker_choose_day__34DFF\",\"day\":\"DatePicker_day__3G2pp\",\"names\":\"DatePicker_names__37CET\",\"active\":\"DatePicker_active__297cm\"};","enum Actions {\r\n    SET_DAY = 'SET_DAY',\r\n    SET_MONTH = 'SET_MONTH',\r\n    SET_YEAR = 'SET_YEAR',\r\n    SET_NAME = 'SET_NAME',\r\n}\r\n\r\ntype InitialStateType = {\r\n    day: number\r\n    month: number\r\n    year: number\r\n    name: string\r\n}\r\ntype SetDayActionType = ReturnType<typeof setDay>\r\ntype SetMonthActionType = ReturnType<typeof setMonth>\r\ntype SetYearActionType = ReturnType<typeof setYear>\r\ntype SetNameActionType = ReturnType<typeof setName>\r\ntype ActionsType =\r\n    SetDayActionType\r\n    | SetMonthActionType\r\n    | SetYearActionType\r\n    | SetNameActionType\r\n\r\nconst now = new Date()\r\nexport const days = ['mon', 'tue', 'wed', 'thu', 'fri', 'sat', 'sun'] //not use\r\nexport const initialState: InitialStateType = {\r\n    day: now.getDate(),\r\n    month: now.getMonth(),\r\n    year: now.getFullYear(),\r\n    name: days[now.getDay() - 1] //not use\r\n}\r\n\r\nexport const dateReducer = (state: InitialStateType, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case Actions.SET_DAY:\r\n            return {...state, day: action.day}\r\n\r\n        case Actions.SET_MONTH:\r\n            return {...state, month: action.month - 1, day: 1}\r\n\r\n        case Actions.SET_YEAR:\r\n            return {...state, year: action.year}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setDay = (newDay: number) => {\r\n    return {\r\n        type: Actions.SET_DAY,\r\n        day: newDay,\r\n    } as const\r\n}\r\nexport const setMonth = (newMonth: number) => {\r\n    return {\r\n        type: Actions.SET_MONTH,\r\n        month: newMonth,\r\n    } as const\r\n}\r\nexport const setYear = (newYear: number) => {\r\n    return {\r\n        type: Actions.SET_YEAR,\r\n        year: newYear,\r\n    } as const\r\n}\r\nexport const setName = (newName: string) => {\r\n    return {\r\n        type: Actions.SET_NAME,\r\n        name: newName,\r\n    } as const\r\n}","import React, {useReducer, MouseEvent, ChangeEvent} from 'react';\r\nimport s from './DatePicker.module.css'\r\nimport {dateReducer, days, initialState, setDay, setMonth, setYear} from \"../state/dateReducer\";\r\n\r\nconst DatePicker = () => {\r\n\r\n        const [date, dispatch] = useReducer(dateReducer, initialState)\r\n\r\n        const daysInMonth = function () {\r\n            return 33 - new Date(date.year, date.month, 34).getDate();\r\n        }\r\n        const nameOfFirstDay = new Date(date.year, date.month, 0).getDay()\r\n        const daysCount = []\r\n        for (let i = 0; i <= daysInMonth() + nameOfFirstDay; i++) {\r\n            i < nameOfFirstDay ? daysCount.push(-1) : daysCount.push(i - nameOfFirstDay + 1)\r\n        }\r\n\r\n        const onSetDay = (e: MouseEvent<HTMLDivElement>) => {\r\n            if (+e.currentTarget.innerText !== 0) {\r\n                dispatch(setDay(+e.currentTarget.innerText))\r\n            }\r\n        }\r\n        const onSetMonth = (e: ChangeEvent<HTMLSelectElement>) => {\r\n            dispatch(setMonth(+e.currentTarget.value))\r\n        }\r\n        const onSetYear = (e: ChangeEvent<HTMLInputElement>) => {\r\n            dispatch(setYear(+e.currentTarget.value))\r\n        }\r\n\r\n        return (\r\n            <div className={s.picker}>\r\n                <div>{`${date.day < 10 ? '0' + date.day : date.day} . ${date.month + 1 < 10 ? '0' + (date.month + 1) : date.month + 1} . ${date.year}`}</div>\r\n                <div className={s.choose_year}>\r\n                    <input\r\n                        type=\"number\"\r\n                        onChange={onSetYear}\r\n                        value={'' + date.year}\r\n                        min={0}\r\n                        max={9999}\r\n                    />\r\n                </div>\r\n                <div className={s.choose_month}>\r\n                    <select\r\n                        onChange={onSetMonth}\r\n                        value={date.month + 1}\r\n                    >\r\n                        <option value=\"1\">Jan</option>\r\n                        <option value=\"2\">Feb</option>\r\n                        <option value=\"3\">Mar</option>\r\n                        <option value=\"4\">Apr</option>\r\n                        <option value=\"5\">May</option>\r\n                        <option value=\"6\">Jun</option>\r\n                        <option value=\"7\">Jul</option>\r\n                        <option value=\"8\">Aug</option>\r\n                        <option value=\"9\">Sep</option>\r\n                        <option value=\"10\">Oct</option>\r\n                        <option value=\"11\">Nov</option>\r\n                        <option value=\"12\">Dec</option>\r\n                    </select>\r\n                </div>\r\n                <div className={s.choose_day}>\r\n                    {days.map(d => <div className={s.day + ' ' + s.names}>{d}</div>)}\r\n                    {daysCount.map(el =>\r\n                        <div\r\n                            key={Math.random()}\r\n                            className={s.day}\r\n                            onClick={onSetDay}\r\n                        >{el < 0 ? '' : el}\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n;\r\n\r\nexport default DatePicker;","import React from 'react';\nimport s from './App.module.css'\nimport DatePicker from \"./DatePicker/DatePicker\";\n\nconst App = () => {\n    return (\n        <div className={s.app}>\n            <DatePicker/>\n        </div>\n    );\n};\n\nexport default App;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__1MC59\"};"],"sourceRoot":""}